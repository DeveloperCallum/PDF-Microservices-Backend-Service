version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    restart: always
    networks:
      - backend-network 
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 1s
      retries: 5

  express:
    build:
      context: .  # Path to your Dockerfile (current directory)
      dockerfile: "./Dockerfile"  # Explicitly specify the Dockerfile
    container_name: express
    networks:
      - backend-network
      - pdf_microservice_arch
      - backend-logging-connector
    environment:
      - POSTGRES_USERNAME=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=job_store
      - EXPRESS_PORT=3200
      - EUREKA_APP_NAME=EXPRESSJS
      - EUREKA_HOST=job-service-eureka-1
      - EUREKA_PORT=8761
    ports:
      - "0.0.0.0:3200:3200"
      - "0.0.0.0:9229:9229"
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  db:
    driver: local

networks:
  backend-network:
    external: false
  pdf_microservice_arch:
    external: true
  backend-logging-connector:
    external: true